"""Utilities for plotting quantities generated by the dst and STAR algorithms.
"""


import matplotlib.pyplot as plt


def plot_dst(
    dst,
    ax=None,
    widths=None,
    cmap=plt.cm.magma,
):
    """Plots the discrete shocklet transform of some data

    Args:
        dst (numpy.ndarray): the discrete shocklet transform of an array
        ax (matplotlib.axes or None): (optional) an axis on which to plot
        widths (iterable or None): widths used to construct the dst
        cmap (matplotlib colormap): colormap to use
    """
    if widths is not None:
        extent = [0, dst.shape[-1] - 1, widths[-1], widths[0]]
        ylabel = '$W$ (window width)'
    else:
        extent = [0, dst.shape[-1] - 1, dst.shape[0] - 1, 0]
        ylabel = '$m$ (window width index)'

    if ax is None:
        fig, ax = plt.subplots()
    
    ax.imshow(
        dist,
        aspect='auto',
        cmap=cmap,
        extent=extent
            )
    ax.set_xlabel('$n$ (time index)', fontsize=15)
    ax.set_ylabel(ylabel, fontsize=15)
    ax.tick_params(labelsize=15)

    return ax


def plot_sif(
    sif,
    ax=None,
    geval=None,
    color='black',
    line_color='crimson',
):
    """Plots the shock indicator function.

    Args:
        sif: (numpy.ndarray) the shock indicator function 
        ax (matplotlib.axes or None): (optional) an axis on which to plot
        geval (numeric): (optional) the value at which the sif is thresholded
        color (string): (optional) the color to plot the sif
        line_color (string): (optional) the color to plot the geval level, if it is passed
    """
    if ax is None:
        fig, ax = plt.subplots()
    
    ax.plot(sif, color=color)

    if geval is not None:
        ax.axhline(geval, 0, 1, color=color, label=f'$g$ = {geval}')
    
    ax.set_xlabel('$n$ (time index)', fontsize=15)
    ax.set_ylabel('$S(n)$ (shock indicator function)', fontsize=15)
    ax.tick_params(labelsize=15)

    return ax
